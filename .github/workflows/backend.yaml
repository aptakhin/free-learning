name: Rollout backend
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

env:
  IMAGE_REGISTRY: registry.digitalocean.com/frlr

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip

    - name: Install dependencies
      env:
        POETRY_VIRTUALENVS_CREATE: false
      working-directory: ./backend
      run: |
        python -m pip install poetry==1.2.2
        poetry install --with=dev -n --no-root

    - name: pytest
      working-directory: ./backend
      env:
        PYTHONPATH: .
      run: |
        pytest

  alembic:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip

    - name: Dump env
      env:
        JOB_CONTEXT: ${{ toJson(env) }}
      run: echo "$JOB_CONTEXT"

    - name: Install dependencies
      env:
        POETRY_VIRTUALENVS_CREATE: false
      working-directory: ./backend
      run: |
        python -m pip install poetry==1.2.2
        poetry install --with=dev -n --no-root

    - name: Run alembic migrations
      working-directory: ./backend
      env:
        PYTHONPATH: .
        FL_BACKEND_DATABASE_URL: ${{ env.BACKEND_DATABASE_URL }}
      run: |
        alembic upgrade head

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2.3.0
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - id: save-kubeconfig
      name: Save KUBECONFIG
      run: |
        delimiter="$(openssl rand -hex 8)"
        echo "kubeconfig<<${delimiter}" >> $GITHUB_OUTPUT
        doctl kubernetes cluster kubeconfig show free-learning-k8s >> $GITHUB_OUTPUT
        echo "${delimiter}" >> $GITHUB_OUTPUT

    - name: Log in to DO Container Registry
      run: doctl registry login --expiry-seconds 600

    - name: Build and push
      uses: docker/build-push-action@v3
      env:
        IMAGE_NAME: backend
      with:
        context: backend
        push: true
        tags: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}

    - name: Deploy
      uses: WyriHaximus/github-action-helm3@v2
      env:
        IMAGE_NAME: backend
      with:
        exec: helm upgrade --install ${{ env.IMAGE_NAME }} ./infra/backend-helm --wait --values=./infra/prod/backend.values.yaml --set imageTag=${{ github.run_id }} --set sendgridToken=${{ secrets.SENDGRID_TOKEN }} --set jwtA14nToken=${{ secrets.JWT_A14N_TOKEN }} --set backendDatabaseUrl=${{ env.BACKEND_DATABASE_URL }}
        kubeconfig: ${{ steps.save-kubeconfig.outputs.kubeconfig }}
